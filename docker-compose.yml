version: '3.8'

services:
  database:
    image: postgres:latest
    container_name: ticketing_db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PORT: ${DB_PORT}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build: ./backend
    container_name: ticketing_backend
    restart: always
    depends_on:
      - database
    env_file:
      - .env
    environment:
      DB_HOST: database
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/usr/src/app
    command: npm start
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ticketing_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80" 
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database

  # frontend:
  #   build: ./frontend
  #   container_name: ticketing_frontend
  #   restart: always
  #   depends_on:
  #     - backend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/usr/src/app
  #   stdin_open: true
  #   tty: true

volumes:
  pgdata:
  pgadmin_data: